{
  "service": {
    "service": "photoAlbumApp",
    "serviceObject": {
      "name": "photoAlbumApp"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs12.x",
      "lambdaHashingVersion": "20201221",
      "stage": "dev",
      "region": "eu-central-1",
      "environment": {
        "ALBUM_TABLE_NAME": "album-table-photo-album-app-dev",
        "PHOTO_TABLE_NAME": "photo-table-photo-album-app-dev",
        "PHOTOS_S3_BUCKET_NAME": "photos-bucket-photo-album-app-dev",
        "PUT_SIGNED_URL_EXPIRATION": "300",
        "GET_SIGNED_URL_EXPIRATION": "86400"
      },
      "httpApi": {
        "cors": true,
        "authorizers": {
          "jwtAuthorizer": {
            "identitySource": "$request.header.Authorization",
            "issuerUrl": {
              "Fn::Join": [
                "",
                [
                  "https://cognito-idp.",
                  "eu-central-1",
                  ".amazonaws.com/",
                  {
                    "Ref": "CognitoUserPool"
                  }
                ]
              ]
            },
            "audience": [
              {
                "Ref": "CognitoUserPoolClient"
              }
            ]
          }
        }
      },
      "variableSyntax": "\\${([^{}:]+?(?:\\(|:)(?:[^:{}][^{}]*?)?)}",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "GenerateUploadUrlLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/photoAlbumApp-dev-generateUploadUrl"
            }
          },
          "CreateAlbumLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/photoAlbumApp-dev-createAlbum"
            }
          },
          "GetAlbumLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/photoAlbumApp-dev-getAlbum"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "photoAlbumApp",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/photoAlbumApp-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/photoAlbumApp-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "photoAlbumApp",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GenerateUploadUrlLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/photoAlbumApp/dev/1612123223223-2021-01-31T20:00:23.223Z/photoAlbumApp.zip"
              },
              "Handler": "src/lambda/generateUploadUrl.handler",
              "Runtime": "nodejs12.x",
              "FunctionName": "photoAlbumApp-dev-generateUploadUrl",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "ALBUM_TABLE_NAME": "album-table-photo-album-app-dev",
                  "PHOTO_TABLE_NAME": "photo-table-photo-album-app-dev",
                  "PHOTOS_S3_BUCKET_NAME": "photos-bucket-photo-album-app-dev",
                  "PUT_SIGNED_URL_EXPIRATION": "300",
                  "GET_SIGNED_URL_EXPIRATION": "86400"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "GenerateUploadUrlIamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GenerateUploadUrlIamRoleLambdaExecution",
              "GenerateUploadUrlLogGroup"
            ]
          },
          "CreateAlbumLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/photoAlbumApp/dev/1612123223223-2021-01-31T20:00:23.223Z/photoAlbumApp.zip"
              },
              "Handler": "src/lambda/createAlbum.handler",
              "Runtime": "nodejs12.x",
              "FunctionName": "photoAlbumApp-dev-createAlbum",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "ALBUM_TABLE_NAME": "album-table-photo-album-app-dev",
                  "PHOTO_TABLE_NAME": "photo-table-photo-album-app-dev",
                  "PHOTOS_S3_BUCKET_NAME": "photos-bucket-photo-album-app-dev",
                  "PUT_SIGNED_URL_EXPIRATION": "300",
                  "GET_SIGNED_URL_EXPIRATION": "86400"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "CreateAlbumIamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateAlbumIamRoleLambdaExecution",
              "CreateAlbumLogGroup"
            ]
          },
          "GetAlbumLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/photoAlbumApp/dev/1612123223223-2021-01-31T20:00:23.223Z/photoAlbumApp.zip"
              },
              "Handler": "src/lambda/getAlbum.handler",
              "Runtime": "nodejs12.x",
              "FunctionName": "photoAlbumApp-dev-getAlbum",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "ALBUM_TABLE_NAME": "album-table-photo-album-app-dev",
                  "PHOTO_TABLE_NAME": "photo-table-photo-album-app-dev",
                  "PHOTOS_S3_BUCKET_NAME": "photos-bucket-photo-album-app-dev",
                  "PUT_SIGNED_URL_EXPIRATION": "300",
                  "GET_SIGNED_URL_EXPIRATION": "86400"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "GetAlbumIamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetAlbumIamRoleLambdaExecution",
              "GetAlbumLogGroup"
            ]
          },
          "GenerateUploadUrlLambdaVersionvQki1PNc4jpghKndmxwkf761OLBxIWtgQUSuKblccAc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GenerateUploadUrlLambdaFunction"
              },
              "CodeSha256": "V4oQNah9lWDbdGqOo6fL1Cf3yqkbPyewRC7rd4IXLiw="
            }
          },
          "CreateAlbumLambdaVersionxoIc9UICyBrUj2cyzJhZLmeZ9P5ksL8c03qDf7BSP0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateAlbumLambdaFunction"
              },
              "CodeSha256": "V4oQNah9lWDbdGqOo6fL1Cf3yqkbPyewRC7rd4IXLiw="
            }
          },
          "GetAlbumLambdaVersionK2ElTYEz7c1xoi4tyeidppMR1eRhRn66JYVxeaNLw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetAlbumLambdaFunction"
              },
              "CodeSha256": "V4oQNah9lWDbdGqOo6fL1Cf3yqkbPyewRC7rd4IXLiw="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-photoAlbumApp",
              "ProtocolType": "HTTP",
              "CorsConfiguration": {
                "AllowHeaders": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "AllowMethods": [
                  "OPTIONS",
                  "POST",
                  "GET"
                ],
                "AllowOrigins": [
                  "*"
                ]
              }
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "HttpApiAuthorizerJwtAuthorizer": {
            "Type": "AWS::ApiGatewayV2::Authorizer",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "AuthorizerType": "JWT",
              "IdentitySource": [
                "$request.header.Authorization"
              ],
              "JwtConfiguration": {
                "Audience": [
                  {
                    "$ref": "$[\"service\"][\"provider\"][\"httpApi\"][\"authorizers\"][\"jwtAuthorizer\"][\"audience\"][0]"
                  }
                ],
                "Issuer": {
                  "$ref": "$[\"service\"][\"provider\"][\"httpApi\"][\"authorizers\"][\"jwtAuthorizer\"][\"issuerUrl\"]"
                }
              },
              "Name": "jwtAuthorizer"
            }
          },
          "GenerateUploadUrlLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GenerateUploadUrlLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGenerateUploadUrl": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GenerateUploadUrlLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 6500
            }
          },
          "HttpApiRoutePostGenerateDashuploadDashurl": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /generate-upload-url",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGenerateUploadUrl"
                    }
                  ]
                ]
              },
              "AuthorizationType": "JWT",
              "AuthorizerId": {
                "Ref": "HttpApiAuthorizerJwtAuthorizer"
              }
            },
            "DependsOn": "HttpApiIntegrationGenerateUploadUrl"
          },
          "CreateAlbumLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateAlbumLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationCreateAlbum": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateAlbumLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 6500
            }
          },
          "HttpApiRoutePostAlbum": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /album",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationCreateAlbum"
                    }
                  ]
                ]
              },
              "AuthorizationType": "JWT",
              "AuthorizerId": {
                "Ref": "HttpApiAuthorizerJwtAuthorizer"
              }
            },
            "DependsOn": "HttpApiIntegrationCreateAlbum"
          },
          "GetAlbumLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetAlbumLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetAlbum": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetAlbumLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 6500
            }
          },
          "HttpApiRouteGetAlbumAlbumidVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /album/{albumId}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetAlbum"
                    }
                  ]
                ]
              },
              "AuthorizationType": "JWT",
              "AuthorizerId": {
                "Ref": "HttpApiAuthorizerJwtAuthorizer"
              }
            },
            "DependsOn": "HttpApiIntegrationGetAlbum"
          },
          "GenerateUploadUrlIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "photoAlbumApp",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/photoAlbumApp-dev-generateUploadUrl:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:PutObject"
                        ],
                        "Resource": "arn:aws:s3:::photos-bucket-photo-album-app-dev/*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:PutItem"
                        ],
                        "Resource": "arn:aws:dynamodb:eu-central-1:*:table/photo-table-photo-album-app-dev"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetItem"
                        ],
                        "Resource": "arn:aws:dynamodb:eu-central-1:*:table/album-table-photo-album-app-dev"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "photoAlbumApp",
                    "dev",
                    "generateUploadUrl",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "CreateAlbumIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "photoAlbumApp",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/photoAlbumApp-dev-createAlbum:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:PutItem"
                        ],
                        "Resource": "arn:aws:dynamodb:eu-central-1:*:table/album-table-photo-album-app-dev"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "photoAlbumApp",
                    "dev",
                    "createAlbum",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "GetAlbumIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "photoAlbumApp",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/photoAlbumApp-dev-getAlbum:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:Query"
                        ],
                        "Resource": "arn:aws:dynamodb:eu-central-1:*:table/photo-table-photo-album-app-dev"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetItem"
                        ],
                        "Resource": "arn:aws:dynamodb:eu-central-1:*:table/album-table-photo-album-app-dev"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:GetObject"
                        ],
                        "Resource": "arn:aws:s3:::photos-bucket-photo-album-app-dev/*"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "photoAlbumApp",
                    "dev",
                    "getAlbum",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "CognitoUserPool": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
              "UserPoolName": "photoAlbumApp-user-pool-dev",
              "UsernameAttributes": [
                "email"
              ],
              "AutoVerifiedAttributes": [
                "email"
              ],
              "AccountRecoverySetting": {
                "RecoveryMechanisms": [
                  {
                    "Name": "verified_email",
                    "Priority": 1
                  }
                ]
              },
              "Policies": {
                "PasswordPolicy": {
                  "MinimumLength": 8,
                  "RequireNumbers": true,
                  "RequireSymbols": true
                }
              }
            }
          },
          "CognitoUserPoolClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
              "ClientName": "photoAlbumApp-user-pool-client-dev",
              "SupportedIdentityProviders": [
                "COGNITO"
              ],
              "AllowedOAuthFlowsUserPoolClient": true,
              "AllowedOAuthFlows": [
                "implicit"
              ],
              "CallbackURLs": [
                "http://localhost:3000/callback"
              ],
              "LogoutURLs": [
                "http://localhost:3000/logout"
              ],
              "DefaultRedirectURI": "http://localhost:3000/callback",
              "AllowedOAuthScopes": [
                "phone",
                "email",
                "openid",
                "profile",
                "aws.cognito.signin.user.admin"
              ],
              "GenerateSecret": false,
              "AccessTokenValidity": 24,
              "UserPoolId": {
                "Ref": "CognitoUserPool"
              }
            }
          },
          "CognitoUserPoolDomain": {
            "Type": "AWS::Cognito::UserPoolDomain",
            "Properties": {
              "Domain": "photo-album-app-dev",
              "UserPoolId": {
                "Ref": "CognitoUserPool"
              }
            }
          },
          "PhotosBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "photos-bucket-photo-album-app-dev",
              "CorsConfiguration": {
                "CorsRules": [
                  {
                    "AllowedOrigins": [
                      "*"
                    ],
                    "AllowedHeaders": [
                      "*"
                    ],
                    "AllowedMethods": [
                      "GET",
                      "PUT",
                      "POST",
                      "DELETE",
                      "HEAD"
                    ],
                    "MaxAge": 3000
                  }
                ]
              }
            }
          },
          "AlbumTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "album-table-photo-album-app-dev",
              "AttributeDefinitions": [
                {
                  "AttributeName": "albumId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "createdAt",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "albumId",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "album-table-user-index-photo-album-app-dev",
                  "KeySchema": [
                    {
                      "AttributeName": "userId",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "createdAt",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          },
          "PhotoTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "photo-table-photo-album-app-dev",
              "AttributeDefinitions": [
                {
                  "AttributeName": "albumId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "createdAt",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "albumId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "createdAt",
                  "KeyType": "RANGE"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "GenerateUploadUrlLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GenerateUploadUrlLambdaVersionvQki1PNc4jpghKndmxwkf761OLBxIWtgQUSuKblccAc"
            }
          },
          "CreateAlbumLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateAlbumLambdaVersionxoIc9UICyBrUj2cyzJhZLmeZ9P5ksL8c03qDf7BSP0"
            }
          },
          "GetAlbumLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetAlbumLambdaVersionK2ElTYEz7c1xoi4tyeidppMR1eRhRn66JYVxeaNLw"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-iam-roles-per-function"
    ],
    "pluginsData": {},
    "functions": {
      "generateUploadUrl": {
        "handler": "src/lambda/generateUploadUrl.handler",
        "events": [
          {
            "httpApi": {
              "path": "/generate-upload-url",
              "method": "post",
              "authorizer": "jwtAuthorizer"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/generate-upload-url"
          }
        ],
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GenerateUploadUrlIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          },
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GenerateUploadUrlIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2]"
          },
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GenerateUploadUrlIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][3]"
          }
        ],
        "name": "photoAlbumApp-dev-generateUploadUrl",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "GenerateUploadUrlLambdaVersionvQki1PNc4jpghKndmxwkf761OLBxIWtgQUSuKblccAc"
      },
      "createAlbum": {
        "handler": "src/lambda/createAlbum.handler",
        "events": [
          {
            "httpApi": {
              "path": "/album",
              "method": "post",
              "authorizer": "jwtAuthorizer"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/album"
          }
        ],
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateAlbumIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          }
        ],
        "name": "photoAlbumApp-dev-createAlbum",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "CreateAlbumLambdaVersionxoIc9UICyBrUj2cyzJhZLmeZ9P5ksL8c03qDf7BSP0"
      },
      "getAlbum": {
        "handler": "src/lambda/getAlbum.handler",
        "events": [
          {
            "httpApi": {
              "path": "/album/{albumId}",
              "method": "get",
              "authorizer": "jwtAuthorizer"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/album/{albumId}"
          }
        ],
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetAlbumIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          },
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetAlbumIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2]"
          },
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetAlbumIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][3]"
          }
        ],
        "name": "photoAlbumApp-dev-getAlbum",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "GetAlbumLambdaVersionK2ElTYEz7c1xoi4tyeidppMR1eRhRn66JYVxeaNLw"
      }
    },
    "resources": {
      "Resources": {
        "CognitoUserPool": {
          "Type": "AWS::Cognito::UserPool",
          "Properties": {
            "UserPoolName": "photoAlbumApp-user-pool-dev",
            "UsernameAttributes": [
              "email"
            ],
            "AutoVerifiedAttributes": [
              "email"
            ],
            "AccountRecoverySetting": {
              "RecoveryMechanisms": [
                {
                  "Name": "verified_email",
                  "Priority": 1
                }
              ]
            },
            "Policies": {
              "PasswordPolicy": {
                "MinimumLength": 8,
                "RequireNumbers": true,
                "RequireSymbols": true
              }
            }
          }
        },
        "CognitoUserPoolClient": {
          "Type": "AWS::Cognito::UserPoolClient",
          "Properties": {
            "ClientName": "photoAlbumApp-user-pool-client-dev",
            "SupportedIdentityProviders": [
              "COGNITO"
            ],
            "AllowedOAuthFlowsUserPoolClient": true,
            "AllowedOAuthFlows": [
              "implicit"
            ],
            "CallbackURLs": [
              "http://localhost:3000/callback"
            ],
            "LogoutURLs": [
              "http://localhost:3000/logout"
            ],
            "DefaultRedirectURI": "http://localhost:3000/callback",
            "AllowedOAuthScopes": [
              "phone",
              "email",
              "openid",
              "profile",
              "aws.cognito.signin.user.admin"
            ],
            "GenerateSecret": false,
            "AccessTokenValidity": 24,
            "UserPoolId": {
              "Ref": "CognitoUserPool"
            }
          }
        },
        "CognitoUserPoolDomain": {
          "Type": "AWS::Cognito::UserPoolDomain",
          "Properties": {
            "Domain": "photo-album-app-dev",
            "UserPoolId": {
              "Ref": "CognitoUserPool"
            }
          }
        },
        "PhotosBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "photos-bucket-photo-album-app-dev",
            "CorsConfiguration": {
              "CorsRules": [
                {
                  "AllowedOrigins": [
                    "*"
                  ],
                  "AllowedHeaders": [
                    "*"
                  ],
                  "AllowedMethods": [
                    "GET",
                    "PUT",
                    "POST",
                    "DELETE",
                    "HEAD"
                  ],
                  "MaxAge": 3000
                }
              ]
            }
          }
        },
        "AlbumTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "album-table-photo-album-app-dev",
            "AttributeDefinitions": [
              {
                "AttributeName": "albumId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "userId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "createdAt",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "albumId",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "album-table-user-index-photo-album-app-dev",
                "KeySchema": [
                  {
                    "AttributeName": "userId",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "createdAt",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ]
          }
        },
        "PhotoTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "photo-table-photo-album-app-dev",
            "AttributeDefinitions": [
              {
                "AttributeName": "albumId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "createdAt",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "albumId",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "createdAt",
                "KeyType": "RANGE"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "layers": {},
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "frameworkVersion": "2",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/john/Desktop/udacity_aws_course/photo-album-app/backend/.serverless/photoAlbumApp.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/photoAlbumApp/dev/1612123223223-2021-01-31T20:00:23.223Z",
    "artifact": "photoAlbumApp.zip"
  }
}